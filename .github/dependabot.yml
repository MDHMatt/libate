version: 2

updates:
# - package-ecosystem: "npm" # Specify the package ecosystem (JavaScript)
#  - package-ecosystem: "" # See documentation for possible values
#    directory: "/" # Location of package manifests
#    schedule:
#      interval: "weekly"
#
# For python projects, uncomment the following section
  # - package-ecosystem: "pip"  # Specify the package ecosystem (Python)
  #   target-branch: "dev" # specify the target branch here
  #   directory: "/"              # Location of the requirements file
  #   schedule:
  #     interval: "daily"        # Check for updates weekly
  #   commit-message:
  #     prefix: "fix"             # Commit message prefix for updates
  #   open-pull-requests-limit: 5  # Limit the number of open PRs
  #   ignore:
  #     - dependency-name: "flask" # Example: Ignore updates for Flask
  #       versions: ["<2.0"]       # Ignore all versions lower than 2.0


#  # Enable version updates for Docker
#  - package-ecosystem: "docker" # Specify the package ecosystem (Docker)
    # Specify the target branch for updates
  - package-ecosystem: "docker"
    directory: "/" # Look for a `Dockerfile` in the `root` directory
    schedule: # Check for updates once a week
      interval: "daily"
    target-branch: "dev" # specify the target branch to update here
    open-pull-requests-limit: 5  # Limit the number of open PRs
    commit-message: # Commit message prefix for updates
      prefix: "update"
    allow:
      - dependency-type: "all"

# Enable version updates for GitHub Actions
  - package-ecosystem: "github-actions"
    # Workflow files stored in the default location of `.github/workflows`
    # You don't need to specify `/.github/workflows` for `directory`. You can use `directory: "/"`.
    directory: "/"
    schedule:
      interval: "weekly"
    target-branch: "dev" # specify the target branch to update here
    open-pull-requests-limit: 5  # Limit the number of open PRs
    commit-message: # Commit message prefix for updates
      prefix: "update git-actions"
    allow:
      - dependency-type: "all" # Allow updates for all dependency types (e.g., direct and indirect dependencies)
    # You can also specify `direct` or `indirect` if you want to limit the updates to only direct or indirect dependencies.
    # For example, `dependency-type: "direct"` will only update direct dependencies.
    # If you want to ignore specific dependencies, you can use the `ignore` field.
    # ignore:
    #   - dependency-name: "actions/checkout" # Example: Ignore updates for actions/checkout
    #     versions: ["<2.0"]  # Ignore all versions lower than 2.0

